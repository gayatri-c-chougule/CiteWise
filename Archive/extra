def embed_file_stream_to_chromadb(uploaded_file):
    filename = Path(uploaded_file.name).stem
    chroma_client = chromadb.PersistentClient(path=DB_DIR)
    collection = chroma_client.get_or_create_collection(name=filename)

    doc = fitz.open(stream=uploaded_file.read(), filetype="pdf")
    pages = []
    for i, page in enumerate(doc):
        raw_text = page.get_text()
        cleaned = clean_text(raw_text)
        pages.append({
            "page_num": [i + 1],
            "source": filename,
            "text": cleaned
        })

    split_pages = split_pages_with_metadata(pages)
    ids, documents, metadatas = prep_for_embedding(split_pages)

    embeddings = embedder.encode(documents, convert_to_numpy=True, show_progress_bar=True)

    collection.add(
        documents=documents,
        embeddings=embeddings,
        metadatas=metadatas,
        ids=ids
    )

    return len(documents)

# ----------- Streamlit UI -----------
st.title("📚 CiteWise: Your AI Powered Research Assistant")
st.markdown("---")

uploaded_file = st.file_uploader("Upload a PDF file to embed into your local vector database", type=["pdf"])

if uploaded_file:
    if st.button("📥 Upload and Embed"):
        try:
            chunk_count = embed_file_stream_to_chromadb(uploaded_file)
            st.success(f"✅ Successfully embedded {chunk_count} chunks from '{uploaded_file.name}' into ChromaDB.")
        except Exception as e:
            st.error(f"❌ Error embedding file: {e}")
